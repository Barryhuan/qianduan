1.什么是模块化
模块化是将一个复杂的程序按照一定的规范划分为几个文件，合成为一个主文件，文件内部数据是私有的，并向外部暴露一些接口进行通信

2.为什么要实现模块化
    1.命名冲突，污染全局作用域（全局变量和方法）
    2.依赖性强，复杂度高，代码维护难（牵一发而动全身）
    3.资源的请求过多，加载逻辑复杂（script加载）
    4.代码复用率低

3.模块化的好处
    1.解决命名冲突，避免污染全部作用域
    2.管理依赖，降低复杂度，代码易维护，复用率高
    3.减少资源请求，加载逻辑清晰

4.模块化的历史进程
    1.全局声明
    function a() {
        return '我是a'
    }
    function b() {
        return '我是b'
    }
    问题：污染全局变量

    2.对象
    var obj = {
        a = a
        b = b
    }
    问题：代码安全性低，可以任意修改里面的数据

    3.IIFE(立即执行代码) 模块化的基石
    (function () {
        var a = '我是a'
        function b() {
            return a
        }
        // 向外暴露方法
        return {
            b: b
        }
    })()
    优点：外部无法访问，只能通过暴露的接口进行通信

    4.添加依赖
    (function ($) {
        var a = '我是a'
        function b() {
            return a
        }
        // 向外暴露方法
        return {
            b: b
        }
    })(Jquery)
    // 也就是添加对象